apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.squareup.leakcanary.deobfuscation'

android {
    compileSdkVersion 32
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.aawaz.tv"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "0.1.0"

        vectorDrawables.useSupportLibrary = true

        resConfigs "en", "hi"
    }

    signingConfigs {

        release {

            def props = new Properties()
            def fileInputStream = new FileInputStream(file('keystore/aawaz.release.properties'))
            props.load(fileInputStream)
            fileInputStream.close()

            storeFile = file(props['storeFile'])
            storePassword = props['storePassword']
            keyAlias = props['keyAlias']
            keyPassword = props['keyPassword']

            v1SigningEnabled true
            v2SigningEnabled true
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            //applicationIdSuffix '.dev'
            resValue "string", "app_name", "Aawaz TV - dev"

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            applicationVariants.all{
                variant ->
                    variant.outputs.each{
                        output->
                            def name = "Aawaz Tv App.apk"
                            output.outputFileName = name
                    }
            }
        }
        release {
            resValue "string", "app_name", "aawaz.com "
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }

    flavorDimensions("environment", "market")

    productFlavors {

        // environment
        dev {
            dimension "environment"
            applicationIdSuffix ".dev"
        }

        prod {
            dimension "environment"
        }

        // market
        google {
            dimension "market"
            versionNameSuffix "G"
        }

        jio {
            dimension "market"
            versionNameSuffix "J"
        }

        amazon {
            dimension "market"
            versionNameSuffix "A"
        }
    }

    buildFeatures {

        // Determines whether to generate a BuildConfig class.
        buildConfig = true
    }

//    leakCanary {
//        // LeakCanary needs to know which variants have obfuscation turned on
//        filterObfuscatedVariants { variant ->
//            println("VariantName: $variant.name")
//            variant.name.contains("Debug") || variant.name.contains("dev")
//        }
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "$JavaVersion.VERSION_1_8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    def coroutines_version = "1.4.2"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation "androidx.leanback:leanback:1.0.0"

    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.appcompat:appcompat:1.2.0"

    // Lifecycle
    def lifecycle_version = "2.2.0"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Navigation library
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Room library
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Work library
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // TV provider support library
    implementation "androidx.tvprovider:tvprovider:1.0.0"

    // ExoPlayer's leanback extension
    def exoplayer_version = "2.11.7"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-leanback:$exoplayer_version"

    def moshi_version = "1.11.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    def retrofit_version = "2.9.0"
    implementation "com.github.skydoves:sandwich:1.0.4"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    def koin_version = "2.2.1"
    //implementation "org.koin:koin-core:$koin_version"

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    // Koin AndroidX Scope feature
    //implementation "org.koin:koin-androidx-scope:$koin_version"

    implementation "com.google.firebase:firebase-analytics-ktx:20.0.2"
    implementation "com.google.firebase:firebase-crashlytics:18.2.7"
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'

    implementation "io.coil-kt:coil:0.11.0"
    implementation "com.jakewharton.timber:timber:4.7.1"

    implementation "androidx.browser:browser:1.2.0"

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    def paging_version = "3.1.0"

    implementation("androidx.paging:paging-runtime:$paging_version")

    implementation("io.github.hadiyarajesh:flower:2.0.0")


//    /**************   RollBar    *******************/
    implementation 'com.rollbar:rollbar-java:1.+'
    implementation 'com.rollbar:rollbar-android:1.+@aar'

    // debugImplementation because LeakCanary should only run in debug builds.
    // debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
}

apply plugin: 'com.google.gms.google-services'
